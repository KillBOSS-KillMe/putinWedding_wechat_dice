<template>
  <view>
    <view class="item">
      <label>标题</label>
      <input type="text" placeholder="请输入标题">
    </view>
    <view class="item">
      <label>描述</label>
      <textarea placeholder="请输入服务描述"></textarea>
    </view>
    <view class="item">
      <view>
        <label>数量</label>
        <text>4辆</text>
      </view>
      <icon class="iconfont iconjiantou"></icon>
    </view>
    <view class="item">
      <view catchtap='showModalBtn'>
        <label>需要日期</label>
        <text>请选择</text>
      </view>
      <icon class="iconfont iconjiantou"></icon>
    </view>
    <view class="item">
      <view>
        <label>同行价</label>
        <text>1000</text>
      </view>
      <icon class="iconfont iconjiantou"></icon>
    </view>
    <view class="item">
      <view>
        <label>市场价</label>
        <text>1000</text>
      </view>
      <icon class="iconfont iconjiantou"></icon>
    </view>
    <view class="item">
      <view>
        <label>所在地</label>
        <text>陕西省西安市雁塔区</text>
      </view>
      <icon class="iconfont iconjiantou"></icon>
    </view>
    <view class="title">
      上传图片
      <text>(最多上传9张)</text>
    </view>
    <view class="imgList">
      <repeat for="{{imgList}}" item="item">
        <image src="{{item.img}}" />
      </repeat>
      <icon class="iconfont iconchuanzhaopian" wx:if="{{imgList.length < 9}}"></icon>
    </view>
    <view class="title">
      <text>车主发布18以上帖子可以看到同行价！</text>
    </view>
    <map class="button" id="map" longitude="113.324520" latitude="23.099994" scale="14" controls="{{controls}}" bindcontroltap="controltap" markers="{{markers}}" bindmarkertap="markertap" polyline="{{polyline}}" bindregionchange="regionchange" show-location style="width:690rpx;padding:10rpx 30rpx;height:380rpx;"></map>
    <view class="sub">
      <view>发布</view>
    </view>




    <view class="modal-mask" bindtap="hideModal" catchtouchmove="preventTouchMove" hidden="{{showModal}}"></view>
    <view class="modal-dialog" hidden="{{showModal}}">
    <view class='modalBox'>
      <!-- <view class='box'> -->
        <!-- <view class='calendarBox'> -->
          <view class='calendarTitleh1'>
            选择调整价格时间
            <view @tap="selAll">全选</view>
          </view>
          <view class='calendarTitle'>
            <icon class="iconfont iconjiantou_zuo" @tap="upMonth"></icon>
            {{thisYear}}年{{thisMonth}}月
            <icon class="iconfont iconjiantou1" @tap="downMonth"></icon>
          </view>
          <!-- 星期显示 -->
          <view class='calendarTitle'>
            <repeat for="{{week}}" item="item">
              <view class="week">{{week[index]}}</view>
            </repeat>
          </view>
          <view class="timeListDom">
            <repeat for="{{weekNum}}" item="item">
              <view></view>
            </repeat>
            <repeat for="{{dayListNode[showMonth]}}" item="item">
              <view class="items noActive" wx:if="{{item.isDid == 0}}">
                {{item.day}}
                <text class="num">{{item.num}}</text>
              </view>
              <view class="items {{item.sel == 1?'active':''}}" wx:if="{{item.isDid == 1}}"
              @tap="chooseDate"
              data-key="{{showMonth}}"
              data-index="{{index}}"
              data-value="{{item.day}}">
                {{item.day}}
                <text class="num">{{item.num}}</text>
              </view>
            </repeat>
          </view>
          
          
        <!-- </view> -->
        <view class="getTime">
          <view @tap="getTime">完成</view>
        </view>
      <!-- </view> -->
    </view>
    </view>


  </view>
</template>

<script>
  import wepy from 'wepy'
  import nav from '../components/nav' // 底部导航
  export default class PostProvide extends wepy.page {
    config = {
      navigationBarTitleText: '发帖'
    }
    components = {
      nav: nav
    }

    mixins = []

    data = {
      userInfo: null,
      imgList: [
        {id: '', img: '../image/daw.jpg'},
        {id: '', img: '../image/daw.jpg'},
        {id: '', img: '../image/daw.jpg'},
        {id: '', img: '../image/daw.jpg'},
      ],
      formNode: {
        num: 5,         // 数量
      },
      // 日历部分
      showModal:true,
      week:["日","一","二","三","四","五","六"],
      showMonth: '',
      dayListNode: {},
      weekNum:0,
      thisMonth:0,
      thisYear:0,
    }

    computed = {

    }

    methods = {
      // 底部导航跳转
      // 底部导航跳转
      goPage (url, evt) {
        if (this.verificationUserInfo()) {
          return false
        }
        // 销毁当前页{跳转}
        this.$redirect(url)
      },
      // 上一月
      upMonth() {
        let data = this.$parent.getPreMonth(this.thisTime)
        this.thisTime = data
        this.$apply()
        data = data.split('-')
        this.showMonth = `time${parseInt(data[0])}_${parseInt(data[1])}`
        this.$apply()
        this.getWeek(data[0], data[1], data[2])
      },
      // 下一月
      downMonth() {
        let data = this.$parent.getNextMonth(this.thisTime)
        this.thisTime = data
        this.$apply()
        data = data.split('-')
        this.showMonth = `time${parseInt(data[0])}_${parseInt(data[1])}`
        this.$apply()
        this.getWeek(data[0], data[1], data[2])
      },
      // 获取时间
      getTime() {
        let dayListNode = this.dayListNode
        let timeList = []
        for( let key in dayListNode ){
          let date = key.split('time').pop().split('_')
          let year = date[0]
          let month = date[1]
          for (let i = 0; i < dayListNode[key].length; i++) {
            if (dayListNode[key][i].sel == 1) {
              let time = `${year}-${month}-${dayListNode[key][i].day}`
              let timeNode = {}
              timeNode[time] = 0
              timeList.push(timeNode)
            }
          }
          console.log(timeList)
        }
      }
      
    }

    events = {

    }

    onLoad() {
      //使用方法： 在此函数内传入年、月、日(此月的天数)即可。
      
    }
    onShow() {
      let date = new Date();
      var year = date.getFullYear(); //获取当前年份   
      var month = date.getMonth()+1; //获取当前月份   
      var day = date.getDate(); //获取当前日
      this.thisTime = `${year}-${month}-${day}`
      this.showMonth = `time${parseInt(year)}_${parseInt(month)}`
      this.$apply()
      this.getWeek(year, month, day)
    }

    // 用户信息校验
    verificationUserInfo() {
      if (!this.userInfo.hasOwnProperty('id')) {
        wx.showToast({
          title: "用户信息加载中...",
          icon: 'none',
        });
        return true
      }
    }
    // 全选
    selAll() {
      let data = this.dayListNode[this.showMonth]
      for (let i = 0; i < data.length; i++) {
        if (data[i].isDid == 1) {
          if (data[i].sel == 1) {
            data[i]['sel'] = 0
          } else {
            data[i]['sel'] = 1
          }
        }
      }
      this.dayListNode[this.showMonth] = data
      this.$apply()
    }

    getWeek(year,month,day){
      year = parseInt(year)
      month = parseInt(month)
      day = parseInt(day)
      
      var arr =[];
      var now = new Date();
      var nowYear = now.getFullYear();
      var nowMonth = now.getMonth()+1;
      var nowDay = now.getDate();
      // 获取月份天数
      var thisMonthNum = new Date(year,month,0).getDate();
      let num = this.formNode.num
      for(var i = 1; i<=thisMonthNum; i++){
        // 显示年份大于等于当前年份
        if (year == nowYear) {
          // 显示月份等于当前月份
          if (month == nowMonth) {
            // 显示日大于等于当前日
            if (day > i) {
              arr.push({day: i, sel: 0, isDid: 0, num: num})
            } else {
              arr.push({day: i, sel: 0, isDid: 1, num: num})
            }
            // 显示月份大于当前月份
          } else if (month > nowMonth) {
            arr.push({day: i, sel: 0, isDid: 1, num: num})
          } else {
            arr.push({day: i, sel: 0, isDid: 0, num: num})
          }
        } else if (year > nowYear) {
          arr.push({day: i, sel: 0, isDid: 1, num: num})
        } else {
          arr.push({day: i, sel: 0, isDid: 0, num: num})
        }
      }
      // 获取前置个数
      var d = new Date();
      d.setFullYear(year);
      d.setMonth(month-1);
      d.setDate(1);
      var n = d.getDay();
      this.weekNum = n
      let key = `time${year}_${month}`
      if (!this.dayListNode.hasOwnProperty(this.showMonth)) {
        this.dayListNode[key] = arr
      }
      this.thisMonth = month
      this.thisYear = year
      this.showModal = false
      this.$apply()
    }
    // 选中日期、取消选中
    chooseDate(e){
      let dayListNode = this.dayListNode
      var index = e.currentTarget.dataset.index
      var val = e.currentTarget.dataset.value
      let key = e.currentTarget.dataset.key
      if (dayListNode[key][index]['sel'] == 1) {
        dayListNode[key][index]['sel'] = 0
      } else {
        dayListNode[key][index]['sel'] = 1
      }
      this.dayListNode = dayListNode
      this.$apply()
    }
    /** 
     * 弹出框蒙层截断touchmove事件 
     */
    preventTouchMove() {
    }
    /** 
      * 隐藏模态对话框 
      */
    hideModal() {
      this.showModal = true
      this.$apply()
    }
    showModalBtn(){
      this.showModal = false
      this.$apply()
    }
  }
</script>
<style lang="less">
  .com{
    padding-bottom: 120rpx;
  }
  .item{
    width: 690rpx;
    height: auto;
    padding: 20rpx 30rpx;
    display: flex;
    // align-items: center;
    justify-content: space-between;
    view{
      width: 660rpx;
      display: flex;
      align-items: center;
      justify-content: flex-start;
      overflow:hidden;
      text-overflow:ellipsis;
      white-space:nowrap;
    }
    label{
      width: 120rpx;
      padding-right: 20rpx;
      font-size: 28rpx;
      font-weight: 600;
      color: #1F1F1F;
    }
    text{
      width: 500rpx;
      font-size: 30rpx;
      color: #333;
    }
    icon{
      display: flex;
      align-items: center;
      justify-content: center;
      width: 30rpx;
      height: 30rpx;
      font-size: 30rpx;
      color: #1F1F1F;
    }
    input{
      width: 552rpx;
    }
    textarea{
      width: 530rpx;
      height: 160rpx;
      padding: 10rpx;
      border-radius: 10rpx;
      border: 1rpx solid #DFDFDF;
    }
  }
  .title{
    width: 690rpx;
    height: auto;
    padding: 30rpx;
    font-size: 32rpx;
    font-weight: 600;
    color: #1F1F1F;
    text{
      font-size: 28rpx;
      font-weight: 500;
      color: #999999;
    }
  }
  .imgList{
    width: 690rpx;
    height: auto;
    padding: 20rpx 30rpx;
    
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-direction: row;
    flex-wrap: wrap;
    .iconchuanzhaopian{
      font-size: 216rpx;
      height: 216rpx;
      width: 216rpx;
    }
    image{
      width: 216rpx;
      height: 216rpx;
      margin: 10rpx 0;
      border-radius: 10rpx;
    }
  }
  .button{
    margin-bottom: 220rpx;
  }
  



.modalBox{
  width: 100%;
  font-size: 32rpx;
}
.box{
  margin: 0 auto;
  width: 630rpx;
}
.calendarTitleh1{
  position: relative;
  width: 100%;
  height: 80rpx;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 32rpx;
  font-weight: 600;
  color: #1F1F1F;
  view{
    position: absolute;
    top: 0;
    right: 0;
    height: 80rpx;
    display: flex;
    align-items: center;
    justify-content: center;
  }
}
.calendarTitle{
  width: 100%;
  height: 80rpx;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 27rpx;
  font-weight: 600;
  color: #1F1F1F;
  view{
    width: 101.4rpx;
  }
  .iconfont{
    width: 80rpx;
    height: 80rpx;
    font-size: 50rpx;
    color: #999999;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .iconjiantou_zuo{
    font-size: 30rpx;
  }
}
.week{
  display: inline-block;
  width:90rpx;
  height: 80rpx;
  text-align: center;
  line-height: 80rpx;
  border-bottom: 1rpx solid #ddd;
  view{
    position: relative;
    background-color: #fff;
  }
  
}
.timeListDom{
  width: 710rpx;
  height: auto;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  flex-direction: row;
  flex-wrap: wrap;
  .items{
    width: 81.4rpx;
    height: 70rpx;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 10rpx 10rpx;
    position: relative;
    color: #999999;
    text{
      position: absolute;
      top: 5rpx;
      right: 5rpx;
      font-size: 20rpx;
      color: #F42652;
    }
  }
  .noActive{
    background-color: #EDEDED;
    color: #999999;
    text{
      color: #F42652;
    }
  }
  .active{
    background-color: #F42652;
    color: #fff;
    text{
      color: #fff;
    }
  }
}

.getTime{
  display: flex;
  align-items: center;
  justify-content: center;
  view{
    margin: 40rpx 0;
    background-color: #F42652;
    font-size: 32rpx;
    font-weight: 600;
    color: #fff;
    width: 280rpx;
    height: 80rpx;
    display: flex;
    align-items: center;
    justify-content: center;
  }
}
/* 模态框 */
  
.modal-mask { 
  width: 100%; 
  height: 100%; 
  position: fixed; 
  top: 0; 
  left: 0; 
  background: #000; 
  opacity: 0.5; 
  overflow: hidden; 
  z-index: 9000; 
}
.modal-dialog { 
  width: 710rpx; 
  padding: 0 20rpx;
  overflow: hidden; 
  position: fixed; 
  left: 0; 
  right: 0;
  bottom: 0;
  margin: 0 auto; 
  z-index: 9999; 
  background: rgba(255, 255, 255, 1); 
  border-radius: 5rpx; 
} 
</style>