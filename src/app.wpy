// customData = {}  // 自定义数据
// customFunction ()　{}  // 自定义方法
// onLoad () {}  // 在Page和Component共用的生命周期函数
// onShow () {}  // 只在Page中存在的页面生命周期函数
// config = {};  // 只在Page实例中存在的配置数据，对应于原生的page.json文件
// data = {};  // 页面所需数据均需在这里声明，可用于模板数据绑定
// components = {};  // 声明页面中所引用的组件，或声明组件中所引用的子组件
// mixins = [];  // 声明页面所引用的Mixin实例
// computed = {};  // 声明计算属性（详见后文介绍）
// watch = {};  // 声明数据watcher（详见后文介绍）
// methods = {};  // 声明页面wxml中标签的事件处理函数。注意，此处只用于声明页面wxml中标签的bind、catch事件，自定义方法需以自定义方法的方式声明
// 普通自定义方法在methods对象外声明，与methods平级
// events = {};  // 声明组件之间的事件处理函数
//props  {传值}  在WePY中属于  父子组件之间  传值的一种机制

// 页面跳转，传参写法
// this.$redirect('./page2', {a: 1, b: 2})
// this.$redirect({
//   url: './pages?a=1&b=2'
// });
// this.$navigate(url)

// 阴影边框
// box-shadow: #f1fefb 1rpx 1rpx 10rpx 5rpx;

// flexflexflexflexflexflexflexflex
// display: flex;
// align-items: center;
// justify-content: space-between;
// 竖向
// flex-direction: column;
// 换行
// display: flex;
// align-items: center;
// justify-content: space-between;
// flex-direction: row;
// flex-wrap: wrap;



// 居右
// flex-direction:row;
// justify-content:flex-end

// vertical-align:middle;

// overflow:hidden;
// text-overflow:ellipsis;
// white-space:nowrap;

// 自动换行
// word-break:break-all;

// overflow:hidden;
// text-overflow:ellipsis;
// white-space:nowrap;


<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'

const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index', // 首页
      'pages/citySel', // 选择城市
      'pages/registeredSelIndustry', // 选择行业
      'pages/registeredClient', // 客户注册
      'pages/registeredService', // 客服注册
      'pages/registeredMerchant', // 商户注册
      'pages/registeredSel', // 注册选择
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    }
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
  }

  onLaunch() {
    this.testAsync()
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
<style lang="less">
  .container {
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    box-sizing: border-box;
  }
  .sub, .submit{
    // height: 200;
    width: 690rpx;
    height: auto;
    padding: 50rpx 30rpx;
    display: flex;
    align-items: center;
    justify-content: center;
    view{
      width: 604rpx;
      height: 100rpx;
      border-radius: 5rpx;
      background-color: #F42652;
      color: #fff;
      font-size: 32rpx;
      font-weight: 600;
      display: flex;
      align-items: center;
      justify-content: center;
    }
  }
  .sub{
    // height: 200;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
  }
  .maskCon{
    width: 100vw;
    height: 100vh;
    position: absolute;
    top: 0px;
    left: 0px;
    .showCon{
      display: flex;
      align-items: center;
      justify-content: space-around;
      flex-direction: column;
      background-color: #fff;
      border-radius: 10rpx;
      z-index: 999;
      position: fixed;
      margin:auto;
      left:0;
      right:0;
      top:0;
      bottom:0;
    }
    .name{
      font-size: 30rpx;
      font-weight: 600;
      color: #1F1F1F;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    input{
      width: 280rpx;
      height: 80rpx;
      border-radius: 10rpx;
      border: 1rpx solid #DFDFDF;
      color: #1F1F1F;
      font-size: 28rpx;
      text-align: center;
    }
    .maskSub{
      width: 280rpx;
      height: 80rpx;
      border-radius: 10rpx;
      background-color: #F42652;
      color: #fff;
      font-size: 32rpx;
      font-weight: 600;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    .mask{
      width: 100vw;
      height: 100vh;
      position: fixed;
      top: 0px;
      left: 0px;
      background: rgba(0, 0, 0, 0.8);
      z-index: 100;
    }
  }
  
  @font-face {font-family: "iconfont";
    src: url('//at.alicdn.com/t/font_1459873_m5olj7w89gb.eot?t=1571209933353'); /* IE9 */
    src: url('//at.alicdn.com/t/font_1459873_m5olj7w89gb.eot?t=1571209933353#iefix') format('embedded-opentype'), /* IE6-IE8 */
    url('data:application/x-font-woff2;charset=utf-8;base64,d09GMgABAAAAAA4wAAsAAAAAGwAAAA3iAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEIGVgCGAAqkEJ0JATYCJANcCzAABCAFhG0HgiAbgxYz0lHSygTZ/wWyMRxY/kEqas5lD8qtKLmofgAAWPp79jBmlDcrh5NKSFCgAQAgfwAwUyABbQEbaGxg0sDcAUTgCUgAAAAAgHz4Y/nej77IWnsUD2S0Jhw1zWAzO9Hj4fP2bn+b0nBZGBZ015UkElgECUactE219DIsTD+mtfXbXtc/2RYGF+QDZCc5ws2aZINosIoCNYeKGlRMaHvG/ZPauRonLhXYgAPWSEYLcPLSfOC/AAIGzy1ss1eJz3io+XNEXE6XIFPNXELjxlRc1ecDWyIssrEdjiUk54syHUvBHtWV9vSS3bLhAXEqDmOgBJCsyUqHFKdAuD3kcuow9f/mSpscFFwjXGlKqFydys/kYDJ/4R9ntwzJFqfM8l5UKyzCMWcLpABtLdsKDexNbYXQNRje/66+kCY04hHdAwFB1xr7zThxFOYQ65yvx8qFCqkMg1zUaJrN4A2FS2+4oIZ3++3zB7sOEHSA9eh2HzZnH/bHIOaYAFdzLoC3lgAJWAMU8NUm/4Qr1rYMOrXlC5TlqVBNfUpLhuFal9d/aIaXes/OWXkq82VtR04GoaumDMvxgijJLEBFWTl5BUVC/odXUlZRVQBWsLUTAGxkeQO2mIwDDVtrHCjYZg6ykIFggBwECyxBcMAKBA+sQQjABoQIbEFIwB6EDHAAgcARvDmcQMgCZxBywAWEPHAFoQDc4GAKuIMggAe4Dk8QSsALhDLwAaECfEGoAn9sggIAqJnN7AF+0Q+wC1jkx5bkMSUNQQpl2jSpGVe7WxyymDKsAZnNpmRTI7LIyVApZ4HNcmISfrZmeTYrzqi5XEqe10G3JGiKMzTGuRetKNWoOu9TAq3RhaXBvKTiOH24qhtjHqTtTLEPrqE7skK7prrcGFSE/tkckI/75ket/0jl9s0vDz4Q/rD2Fw4EAYAXuddgxxzdNelRW7NWjXN0ftw1bY0csU5XHjl77FGYVQtF1eeZwKUu8ECrOlbuflzDgmAeJj+KwFv+8GpLq9G/w+ayMP+ozet0cr78skfef0MuPgQwo/N6DzlO3OW3y179jUiBfVVAJEvA7Gz3ZdJVSiLObxrsUsfaZd2DgTyYCtKOqwD8WCHrlIA06WPOxdcFYtuL5kRyyVv4rEhRWG2YAWauxePLHGlIVoTaRa66OlMco6JROXjA+dsmvTieORcsQ4wNxurxsfYWhmy2B4sgoecCxgANF0D0bk/IQS13RPMw5xoE3cDSg4cv8Xj1elgcYRpYLhyGdn1qhenPc/jsgg/TCCr3jy3g5m3Jby14YZiI2ptXY5A97dQtE25o/KYl9BK1C4WwaDusgRCnwwf8+7ZX/88PX3Bzza5ly1uheBRissbEpERZNggyOwOJxRFG4LAnANJnRiMREniTbog0fKgPsNToxPnjmmXN6VqoUKWUhO73yWrR0yrd+24fE0b/kUIi+RZzUsuWQa6GjffplDTG1SyyxnHYxH372fQoymnOh8l3bwBM3l/K1XdvBXSQfAOyhg0t8A2hzfCHUr4hUmn/9UsPUAdkX5szZ9Uj/fGG144P3beVuN6oltONSuxVtyRmrZ9S9KJCBajsfqX0ol6KJHvkiNYgFRINcvRln+rNyJrXg8s+zN49JBdfN6nxVO+BTa1BuK1l6hPSDabPlpgSqslpfMPWItYYS8FOVd9Z3VfG46k9IY+EMtonk/kANdemtGT+gOWx8fjP3w8rT5H2VD0Lrx+Xv+mZYDjlEFSAUbmBZFwCYIh6G4iiNyzCNL/FK0qUL1B6vvF7IgY2le6GbYzKKLvWs6ENYqIgsk2hBWz6j4etC4hJn+Mml2PTpg3U9vp1B7EzjaSeEMMCoM3EHMOFWeNifhFQM6Rdn/Z4WO43pKz4oH00P+ufdne4W1IZG1JwIEgfQ8P8lttHBbnpMA5teivOA+dRPUA0Lc0Np34uUY08l92DTUAClDX1BGEkixCbPRqaWiWgBguKeJ4secMjweBoY1PS93JzdpkjVwRBZVGXxK4SjAgJjWQ0UGpSid1DamZ1M8XpQ8Smbv/35Sm24NS9vNrZK+v/byYMDGHQ3SM3FoMPZDWYKS7mplXfklITRV+/WJmlVF6+MmHSS71qT9HeAwqQofSTBI1GnOQmTJU8QdB9k2xwwvMOIZXR7nAT8TsEXJmMsITMr+bme3bVunVV4gdiFO5kuUVDRJHZMHG6iLVHCIQuZOVTeTNEoIWXr85D85EZAi2kW1Rd9BSORjt242MDzEsWGmn6h7smuR6hG+zY3fUxFisuwmK5SUAVYkW+VuSRhUVFicVylDCP6CiEXlUYpPYfkOMjMADvcfX34K+rCzZ6pRueKRt/0bxuYC5i8nt6JqNDXUFYCDET6Nsl8v43lZO3f5xSf2wTnvz+wbtrqrnw4fqcqWLjMeCxhBKeE93Zb7mflJ2z6rXiPw7zcPstRgkhuHWFQE3Wk6rHlp9V62pItWDwsdoykzTbc4lXw7vw2PrKBV49qSazFtsx+SQMXxpstfzTvTUSW9X/Dmv3Lz1YMX29+dpxY/dZxBiNpySfNJD8ctqbtRjIZ5TgHGpNQ6PLh1jsf3X4lTbkEfhto2Mx5uF2+bOHH7fd6xcTrbaMMQvHY9xC0xmhWEROTiQW+jlqrUIQJZCyddtWd+HUpC5bJ410XEFGCyx9pPER6sSl7DCN7TKDFcXqUfZNJiXL6KEMFc6j1MLUYwBtQoObQt90NLAxe23mMYh6EHKkUclCnDo1qtiPPbJpVA+3kZo0ZlQ9beKooSPFkRWjtF5rZdiNmlG+YlCI6ip36wnOuRisAhmy3kq8e0eo/K2vgO38WOnGIqRbz0yaVLoRvWaw+zld5iieXmpzOODLt8PRUiP2rdDuHVrwlVFPp1Q5YjOo7x3bb1pkK0IUzXnp7TanyrnjxvEqss3rXRujqT7MZFSZtB1yTDB7F2qnVqSaD8uNe7myJlBzq4enJJ+SSj6mbXtcFFjQYFZbc+S/cRI7ubYumf2Em6LPMOCjCqqtqwQZho9FUGVdLUjRQ0j6m3XlpQEtO8vN99wxNirS0uBMFCagaXMNjd/s2i0no8gl9NFporShtCV+R1pX5fb2LshtXNhGRpM3JV5ekptOtbDTmfyVFu7hHnPSd5Dtd5ZDZC9PmAiHkeqdnNH/FYi2X0mfY8hzERnDHhAdv1I6JmAEiRgq9VnxWQkKQcvgHjZLlS6yFaoynFZNT+vZOi6g3ex7qLSJdq9kack9Q1mT+4/2Zv+5y9J6lu1yUmUI7QqJXUGxDQPNf1Rg+K5kSck7Q2lTqGEEjNt2g1WBzwNTsdoKLJHPqa1MxfzMSq3iAcEZZEs+tj6Lc4i0iXTUqrcnmsWYaPL9Tp3yy08yCj++YYhalS3Rb+AQFzJ85ksJO/pcu9zVWUc39XD447+t4TE08Q0TfMonTiz3eVqmmU7njfXYw+fEvzF3CrizUO8QZM+EU8rEimnFUDGtmGq5A7XDh5LHt8ODjWEYUnSmmGmYoD5Qoim+D9uXbXrto5+IxBeM8LcxZ8H64w0BjUnjn0DXv7W0xEjOlNvbluyAxcF8VmgAw9Mv5XNUF1fJkLkmzLRLO5Tmo5YLvAR9u9TjXi6M/CwbkrBlLH2WpEr+2TONMZSuCG7vbndV0EczltPH0Ps6N+gWWv4a67l81v4OjcfDuEexD+MfWk2ZIvIU8/Iiv6mtHsy+FzvEv3KnMJ2YWPknFpe7zGjaEtT97C5h9OwcHP+vgypYfwuJN4dtrNgQ4mPKtKIgc1H2eOEuj53WphO2CCaE9KYR8h1jOEPZzHD2ZHgGl/38jtCDtLoxRjmLy1L/K3AsN2WYKxgKJ4ZLhC8jwMHfnzEpZMYsn5Z93idOcRcGFgYaM0xZPs39SdMeDmkawqQX0Qu5ZUVlZrFZPd5OJSViiQ0tb88vNBOt/93eo3rZ2y8XDps5q/q53vv28wV243bYrohnzhX8/PMqUyisWQNNB42loOu7RNjJKAd3tiucjy8EGKQIDFGAufhSfEZ4DipHrcRzDD+CwgbJMofAkZvO8EKdYk1RmRN2nKtAVT/ICYN/0tmyGxXp0ajBvhYRBCqhqGuaZ/Wjch76VIf8EaEpxWTQDyZ+NrTwjs8u2ry5LQk0AQCYIG5KEQ90iMAztL6831xWZER8bycPhoeDYTeYPS3Y/TlIn21T3tEwI9waCpfgAGDz4wAPfGaJ4OFwIgaF7cdakYrPcLDQYQgcjHUie81oEOGE0cHBKWPDCmJb5kAJNICABAsATtBrMEIeNjMBWfhnEvJwUVfZD5iGKnxgBvIYYgHo/y7bOay9fB28WgSPkQgeQodkpCjxA2fdL4w5AxvMtQf/oXV6odiuNtGVn2jQNtGAK+Od91JIS7n4MHqGWUaisJRg6FfK++K2Xktdg6uQ8tqg9spCwJujR4TAY2otRAwZ7A1ib/4LirEMsBk7/Zn6D7IcferC1sqmgP4pTaGdDkV1SrEdT1xJyC0tkhM+iIsyvowIhb6qBAp5K6rCksLNmhxMFpWr7iP57iCx8e2SdaJWUFJR09DS0fO24jOSmGGWOeYXFpeWV1bX1k0TDcYTg7VUHS6n8B1cd50H1gpoGjBxDuQ50EC7TS9PDdvugzZxhXr4fYP/J1NLQsAdpRrFuifR3JOL425qxa0UJXccsWMalfLeGcxTEcQwEHcKIsyZ0qoowk4o/2FB2XySQFPxqXQv0k0ug+34XlVygYpvp507sa3VAAA=') format('woff2'),
    url('//at.alicdn.com/t/font_1459873_m5olj7w89gb.woff?t=1571209933353') format('woff'),
    url('//at.alicdn.com/t/font_1459873_m5olj7w89gb.ttf?t=1571209933353') format('truetype'), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */
    url('//at.alicdn.com/t/font_1459873_m5olj7w89gb.svg?t=1571209933353#iconfont') format('svg'); /* iOS 4.1- */
  }

  .iconfont {
    font-family: "iconfont" !important;
    font-size: 16px;
    font-style: normal;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  .iconjiantouarrow486:before {
    content: "\e6ab";
  }

  .iconjiantouarrow492:before {
    content: "\e6b2";
  }

  .iconduihao:before {
    content: "\e61e";
  }

  .iconbuoumaotubiao20:before {
    content: "\e612";
  }

  .iconjiantou1:before {
    content: "\e603";
  }

  .icondingwei:before {
    content: "\e639";
  }

  .iconjiantou_zuo:before {
    content: "\e663";
  }

  .iconfabu:before {
    content: "\e6a4";
  }

  .iconfanhui:before {
    content: "\e6a5";
  }

  .iconfenxiang:before {
    content: "\e6a6";
  }

  .iconjiantou:before {
    content: "\e6a7";
  }

  .iconkefu:before {
    content: "\e6a8";
  }

  .iconsousuo:before {
    content: "\e6aa";
  }

  .iconfabu1:before {
    content: "\e6ac";
  }

  .iconweixuanzhong:before {
    content: "\e6ad";
  }

  .iconweishoucang:before {
    content: "\e6ae";
  }

  .iconwode:before {
    content: "\e6af";
  }

  .iconshouye:before {
    content: "\e6b0";
  }

  .iconxiaoxi:before {
    content: "\e6b1";
  }

  .iconxiaoxi1:before {
    content: "\e6b3";
  }

  .iconshezhi:before {
    content: "\e6b4";
  }

  .icondianhua1:before {
    content: "\e6b5";
  }

  .iconchuanzhaopian:before {
    content: "\e6b7";
  }

  .iconwode1:before {
    content: "\e6b8";
  }

  .iconshouye1:before {
    content: "\e6ba";
  }
</style>