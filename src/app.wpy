// customData = {}  // 自定义数据
// customFunction ()　{}  // 自定义方法
// onLoad () {}  // 在Page和Component共用的生命周期函数
// onShow () {}  // 只在Page中存在的页面生命周期函数
// config = {};  // 只在Page实例中存在的配置数据，对应于原生的page.json文件
// data = {};  // 页面所需数据均需在这里声明，可用于模板数据绑定
// components = {};  // 声明页面中所引用的组件，或声明组件中所引用的子组件
// mixins = [];  // 声明页面所引用的Mixin实例
// computed = {};  // 声明计算属性（详见后文介绍）
// watch = {};  // 声明数据watcher（详见后文介绍）
// methods = {};  // 声明页面wxml中标签的事件处理函数。注意，此处只用于声明页面wxml中标签的bind、catch事件，自定义方法需以自定义方法的方式声明
// 普通自定义方法在methods对象外声明，与methods平级
// events = {};  // 声明组件之间的事件处理函数
//props  {传值}  在WePY中属于  父子组件之间  传值的一种机制

// 页面跳转，传参写法
// this.$redirect('./page2', {a: 1, b: 2})
// this.$redirect({
//   url: './pages?a=1&b=2'
// });
// this.$navigate(url)

// 阴影边框
// box-shadow: #f1fefb 1rpx 1rpx 10rpx 5rpx;

// flexflexflexflexflexflexflexflex
// display: flex;
// align-items: center;
// justify-content: space-between;
// 竖向
// flex-direction: column;
// 换行
// display: flex;
// align-items: center;
// justify-content: space-between;
// flex-direction: row;
// flex-wrap: wrap;



// 居右
// flex-direction:row;
// justify-content:flex-end

// vertical-align:middle;

// overflow:hidden;
// text-overflow:ellipsis;
// white-space:nowrap;

// 自动换行
// word-break:break-all;

// overflow:hidden;
// text-overflow:ellipsis;
// white-space:nowrap;


<script>
import wepy from 'wepy';
import 'wepy-async-function';

import { setStore } from 'wepy-redux';
import configStore from './store';

const store = configStore();
setStore(store);

export default class extends wepy.app {
  config = {
    pages: [
      // 首页模块
      'pages/index', // 首页
      'pages/productDetails', // 产品详情
      'pages/productSelIndustry', // 选择行业
      'pages/grabOrder', // 抢单
      'pages/grabOrderDetails', // 抢单-产品详情
      'pages/service', // 服务
      'pages/interactiveInfo', // 同行互动-详情
      'pages/interactive', // 同行互动
      'pages/allCommodity', // 所有商品

      // 发布
      'pages/releaseTypeSel', // 发帖--类型选择
      'pages/postExchange', // 发帖--同行互换
      'pages/postProvide', // 发帖--提供 
      'pages/postNeed', // 发帖--需要
      'pages/selIndustry', // 选择行业
      'pages/fillOrder', // 填写订单

      // 消息
      'pages/messageList', // 消息列表
      'pages/messageDetail', // 消息详情

      // 个人中心
      'pages/me', // 个人中心  
      'pages/meSettingPhone', // 个人中心--设置--电话
      'pages/meSetting', // 个人中心--设置
      'pages/meBalance', // 个人中心--账号余额
      'pages/meCashBack', // 个人中心--分销反佣
      'pages/meRecharge', // 个人中心--充值
      'pages/meCash', // 个人中心--提现
      
      // 订单模块
      'pages/orderList', // 订单列表
      'pages/orderListExchange', // 订单列表--同行互换
      'pages/orderPost', // 发布评价
      'pages/orderDetailBail', // 订单详情--保证金
      'pages/orderListDetail', // 订单详情
      
      

      // 注册部分
      'pages/registeredSel', // 注册选择
      'pages/citySel', // 选择城市
      'pages/registeredSelIndustry', // 选择行业--注册
      'pages/registeredClient', // 客户注册
      'pages/registeredService', // 代理注册
      'pages/registeredMerchant', // 商户注册
      
    ],
    permission: {
      'scope.userLocation': {
        desc: '你的位置信息将用于小程序位置接口的效果展示'
      }
    },
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    }
  };

  globalData = {
    userInfo: {},
    // 接口请求路径
    requestUrl: 'http://192.168.0.101:8083/api/v1/wedding_api',
    // 图片路径
    requestImgUrl: 'https://192.168.0.101/api/v1/wedding_api',
    mapKey: 'GCABZ-J4G64-2WKUX-DNQMK-MVCGK-OSFD4',
    apikey: '123456',
    token: '',
    isTourist: false, // 是否是游客
    cityGather: '',  // 城市集合
  };

  constructor() {
    super();
    this.use('requestfix');
  }

  onLaunch() {
    this.testAsync();
  }
  // 获取Token
  getToken() {
    wx.login({
      success: res => {
        if (res.code) {
          console.log(res.code)
          wx.request({
            url: `${this.globalData.requestUrl}/auth/get_token`,
            method: 'POST',
            header: {
              apikey: this.globalData.apikey
            },
            data: {
              code: res.code
            },
            success: data => {
              data = this.null2str(data)
              console.log(data)
              let token = `${data.data.token_type} ${data.data.token}`
              console.log(token)
              return token
            }
          })
        }
      }
    })
  }
  // 拨打电话
  runCall(phone) {
    wx.makePhoneCall({
      phoneNumber: phone
    })
  }
  sleep(s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved');
      }, s * 1000);
    });
  }
  // 点击图片放大，长按后可操作
  shareQRCodeImg(e) {
    let url =  e.currentTarget.dataset.imgurl
    wx.previewImage({
      current: [url], // 当前显示图片的http链接   
      urls: [url] // 需要预览的图片http链接列表   
    })
  }
  // 删除照片
  deleImg(that, e) {
    var idx = e.currentTarget.dataset.idx
    var imgArr = that.data.imgArr || []
    imgArr.splice(idx, 1)
    that.setData({
      imgArr
    })
  }
  // 上传图片
  uploadImg(that) {
    var self = this
    wx.chooseImage({
      success: function (res) {
        wx.showToast({
          title: '图片上传中',
          icon: 'loading'
        });
        var imgArr = that.data.imgArr || [] // 放图片的数组
        var imgLength = that.data.imgLength || 9 //默认上传9张图片
        if (imgArr.length + res.tempFiles.length > imgLength) {
          wx.showToast({
            title: `最多上传${imgLength}张图片`,
            icon: 'none'
          })
          return false
        }
        Promise.all(res.tempFiles.map(item => {
          return new Promise((resolve, reject) => {
            wx.uploadFile({
              url: `${self.globalData.requestUrl}/work/upload_file`,
              filePath: item.path,
              name: 'photo',
              success(res) {
                resolve({
                  path: JSON.parse(res.data).data
                })
              }
            })
          })
        })).then(e => {
          wx.hideToast();
          that.setData({
            imgArr: imgArr.concat(e)
          })
        }).catch(err => console.log(err))
      },
    })
  }
  /**
  * 时间戳转时间
  */
  transformTime(timestamp = +new Date()) {
    if (timestamp) {
      var time = new Date(timestamp);
      var y = time.getFullYear(); //getFullYear方法以四位数字返回年份
      var M = time.getMonth() + 1; // getMonth方法从 Date 对象返回月份 (0 ~ 11)，返回结果需要手动加一
      var d = time.getDate(); // getDate方法从 Date 对象返回一个月中的某一天 (1 ~ 31)
      var h = time.getHours(); // getHours方法返回 Date 对象的小时 (0 ~ 23)
      var m = time.getMinutes(); // getMinutes方法返回 Date 对象的分钟 (0 ~ 59)
      var s = time.getSeconds(); // getSeconds方法返回 Date 对象的秒数 (0 ~ 59)
      return y + '-' + M + '-' + d + ' ' + h + ':' + m + ':' + s;
    } else {
      return '';
    }
  }
  /**
  * null => ''
  * @param {*} data 要处理的数据
  */
  null2str(data) {
    for (let x in data) {
      if (data[x] === null) { // 如果是null 把直接内容转为 ''
        data[x] = ''
      } else {
        if (Array.isArray(data[x])) { // 是数组遍历数组 递归继续处理
          data[x] = data[x].map(z => {
            return this.null2str(z)
          })
        }
        if(typeof(data[x]) === 'object'){ // 是json 递归继续处理
          data[x] = this.null2str(data[x])
        }
      }
    }
    return data
  }
  async testAsync() {
    const data = await this.sleep(3);
    console.log(data);
  }

  getUserInfo(cb) {
    const that = this;
    if (this.globalData.userInfo) {
      return this.globalData.userInfo;
    }
    wepy.getUserInfo({
      success(res) {
        that.globalData.userInfo = res.userInfo;
        cb && cb(res.userInfo);
      }
    });
  }
}
</script>
<style lang="less">
#getUserInfo{
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  opacity: 0;
  z-index: 999;
}
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
.sub,
.submit {
  // height: 200;
  width: 690rpx;
  height: auto;
  padding: 50rpx 30rpx;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #fff;
  view {
    width: 604rpx;
    height: 100rpx;
    border-radius: 5rpx;
    background-color: #f42652;
    color: #fff;
    font-size: 32rpx;
    font-weight: 600;
    display: flex;
    align-items: center;
    justify-content: center;
  }
}
.sub {
  // height: 200;
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
}
.maskCon {
  width: 100vw;
  height: 100vh;
  position: absolute;
  top: 0px;
  left: 0px;
  .showCon {
    display: flex;
    align-items: center;
    justify-content: space-around;
    flex-direction: column;
    background-color: #fff;
    border-radius: 10rpx;
    z-index: 999;
    position: fixed;
    margin: auto;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
  }
  .name {
    font-size: 30rpx;
    font-weight: 600;
    color: #1f1f1f;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  input {
    width: 280rpx;
    height: 80rpx;
    border-radius: 10rpx;
    border: 1rpx solid #dfdfdf;
    color: #1f1f1f;
    font-size: 28rpx;
    text-align: center;
  }
  .maskSub {
    width: 280rpx;
    height: 80rpx;
    border-radius: 10rpx;
    background-color: #f42652;
    color: #fff;
    font-size: 32rpx;
    font-weight: 600;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .mask {
    width: 100vw;
    height: 100vh;
    position: fixed;
    top: 0px;
    left: 0px;
    background: rgba(0, 0, 0, 0.8);
    z-index: 100;
  }
}

// 多选框样式
  checkbox .wx-checkbox-input {
    border-radius: 50%; /* 圆角 */
    width: 40rpx; /* 背景的宽 */
    height: 40rpx; /* 背景的高 */
  }
  checkbox .wx-checkbox-input.wx-checkbox-input-checked {
    border: none;
    background: #fc6800;
  }
  checkbox .wx-checkbox-input.wx-checkbox-input-checked::before {
    border-radius: 50%; /* 圆角 */
    width: 40rpx; /* 选中后对勾大小，不要超过背景的尺寸 */
    height: 40rpx; /* 选中后对勾大小，不要超过背景的尺寸 */
    line-height: 40rpx;
    text-align: center;
    font-size: 40rpx; /* 对勾大小 30rpx */
    color: #fff; /* 对勾颜色 白色 */
    background: transparent;
    // transform:translate(-50%, -50%) scale(1);
    // -webkit-transform:translate(-50%, -50%) scale(1);
  }
  @font-face {font-family: "iconfont";
    src: url('//at.alicdn.com/t/font_1459873_6g3cx6dgn2g.eot?t=1571725024382'); /* IE9 */
    src: url('//at.alicdn.com/t/font_1459873_6g3cx6dgn2g.eot?t=1571725024382#iefix') format('embedded-opentype'), /* IE6-IE8 */
    url('data:application/x-font-woff2;charset=utf-8;base64,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') format('woff2'),
    url('//at.alicdn.com/t/font_1459873_6g3cx6dgn2g.woff?t=1571725024382') format('woff'),
    url('//at.alicdn.com/t/font_1459873_6g3cx6dgn2g.ttf?t=1571725024382') format('truetype'), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */
    url('//at.alicdn.com/t/font_1459873_6g3cx6dgn2g.svg?t=1571725024382#iconfont') format('svg'); /* iOS 4.1- */
  }

  .iconfont {
    font-family: "iconfont" !important;
    font-size: 16px;
    font-style: normal;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  .iconjiantouarrow486:before {
    content: "\e6ab";
  }

  .iconjiantouarrow492:before {
    content: "\e6b2";
  }

  .iconduihao:before {
    content: "\e61e";
  }

  .iconxin1:before {
    content: "\e635";
  }

  .iconxin:before {
    content: "\e608";
  }

  .iconshijian:before {
    content: "\e61a";
  }

  .iconbuoumaotubiao20:before {
    content: "\e612";
  }

  .iconjiantou1:before {
    content: "\e603";
  }

  .icondingwei:before {
    content: "\e639";
  }

  .iconguanbi:before {
    content: "\e616";
  }

  .iconjiantou_zuo:before {
    content: "\e663";
  }

  .iconfabu:before {
    content: "\e6a4";
  }

  .iconfanhui:before {
    content: "\e6a5";
  }

  .iconfenxiang:before {
    content: "\e6a6";
  }

  .iconjiantou:before {
    content: "\e6a7";
  }

  .iconkefu:before {
    content: "\e6a8";
  }

  .iconsousuo:before {
    content: "\e6aa";
  }

  .iconfabu1:before {
    content: "\e6ac";
  }

  .iconweixuanzhong:before {
    content: "\e6ad";
  }

  .iconweishoucang:before {
    content: "\e6ae";
  }

  .iconwode:before {
    content: "\e6af";
  }

  .iconshouye:before {
    content: "\e6b0";
  }

  .iconxiaoxi:before {
    content: "\e6b1";
  }

  .iconxiaoxi1:before {
    content: "\e6b3";
  }

  .iconshezhi:before {
    content: "\e6b4";
  }

  .icondianhua1:before {
    content: "\e6b5";
  }

  .iconchuanzhaopian:before {
    content: "\e6b7";
  }

  .iconwode1:before {
    content: "\e6b8";
  }

  .iconshouye1:before {
    content: "\e6ba";
  }

</style>